<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fosu.lesson.dao.TTeacherMapper">
  <resultMap id="BaseResultMap" type="com.fosu.lesson.pojo.TTeacher">
    <result column="teacher_id" jdbcType="VARCHAR" property="teacherId" />
    <result column="teacher_name" jdbcType="VARCHAR" property="teacherName" />
    <result column="telephoto" jdbcType="VARCHAR" property="telephoto" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="teacher_pw" jdbcType="VARCHAR" property="teacherPw" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    teacher_id, teacher_name, telephoto, email, remark, teacher_pw
  </sql>
  <select id="selectByExample" parameterType="com.fosu.lesson.pojo.TTeacherExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.fosu.lesson.pojo.TTeacherExample">
    delete from t_teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fosu.lesson.pojo.TTeacher">
    insert into t_teacher (teacher_id, teacher_name, telephoto, 
      email, remark, teacher_pw
      )
    values (#{teacherId,jdbcType=VARCHAR}, #{teacherName,jdbcType=VARCHAR}, #{telephoto,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{teacherPw,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fosu.lesson.pojo.TTeacher">
    insert into t_teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="teacherName != null">
        teacher_name,
      </if>
      <if test="telephoto != null">
        telephoto,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="teacherPw != null">
        teacher_pw,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="teacherId != null">
        #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="teacherName != null">
        #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="telephoto != null">
        #{telephoto,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="teacherPw != null">
        #{teacherPw,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fosu.lesson.pojo.TTeacherExample" resultType="java.lang.Long">
    select count(*) from t_teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_teacher
    <set>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherName != null">
        teacher_name = #{record.teacherName,jdbcType=VARCHAR},
      </if>
      <if test="record.telephoto != null">
        telephoto = #{record.telephoto,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherPw != null">
        teacher_pw = #{record.teacherPw,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_teacher
    set teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      teacher_name = #{record.teacherName,jdbcType=VARCHAR},
      telephoto = #{record.telephoto,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      teacher_pw = #{record.teacherPw,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <select id="selectOne" parameterType="com.fosu.lesson.pojo.TTeacher" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_teacher
    <where>
      <if test="teacherId != null">
      and  teacher_id = #{teacherId,jdbcType=VARCHAR}
      </if>
      <if test="teacherName != null">
        and   teacher_name = #{teacherName,jdbcType=VARCHAR}
      </if>
      <if test="telephoto != null">
        and  telephoto = #{telephoto,jdbcType=VARCHAR}
      </if>
      <if test="email != null">
        and  email = #{email,jdbcType=VARCHAR}
      </if>
      <if test="remark != null">
        and  remark = #{remark,jdbcType=VARCHAR}
      </if>
      <if test="teacherPw != null">
        and  teacher_pw = #{teacherPw,jdbcType=VARCHAR}
      </if>
    </where>
  </select>
  <select id="selectByColumnName" resultType="java.lang.String" parameterType="java.lang.String">
       select distinct  ${teacher_name} from t_teacher;
    </select>

  <select id="findTeacher"  resultMap="BaseResultMap">
      SELECT t_course.teacher_id,t_teacher.teacher_name FROM t_course, t_teacher
      WHERE t_course.teacher_id=t_teacher.teacher_id
      AND t_course.class_id = #{course.classId}
      AND t_course.remark=#{course.remark}
  </select>

</mapper>