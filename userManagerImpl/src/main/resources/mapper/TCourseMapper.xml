<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fosu.lesson.dao.TCourseMapper">
  <resultMap id="BaseResultMap" type="com.fosu.lesson.pojo.TCourse">
    <result column="grade" jdbcType="VARCHAR" property="grade" />
    <result column="course_id" jdbcType="VARCHAR" property="courseId" />
    <result column="class_id" jdbcType="VARCHAR" property="classId" />
    <result column="teacher_id" jdbcType="VARCHAR" property="teacherId" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="course_sort" jdbcType="VARCHAR" property="courseSort" />
    <result column="class_hour" jdbcType="VARCHAR" property="classHour" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="free" jdbcType="VARCHAR" property="free" />
    <result column="teachertime" jdbcType="VARCHAR" property="teachertime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    grade, course_id, class_id, teacher_id, course_name, course_sort, class_hour, remark, 
    free, teachertime
  </sql>
  <select id="selectByExample" parameterType="com.fosu.lesson.pojo.TCourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.fosu.lesson.pojo.TCourseExample">
    delete from t_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fosu.lesson.pojo.TCourse">
    insert into t_course (grade, course_id, class_id, 
      teacher_id, course_name, course_sort, 
      class_hour, remark, free, 
      teachertime)
    values (#{grade,jdbcType=VARCHAR}, #{courseId,jdbcType=VARCHAR}, #{classId,jdbcType=VARCHAR}, 
      #{teacherId,jdbcType=VARCHAR}, #{courseName,jdbcType=VARCHAR}, #{courseSort,jdbcType=VARCHAR}, 
      #{classHour,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{free,jdbcType=VARCHAR}, 
      #{teachertime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fosu.lesson.pojo.TCourse">
    insert into t_course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="grade != null">
        grade,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="courseSort != null">
        course_sort,
      </if>
      <if test="classHour != null">
        class_hour,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="free != null">
        free,
      </if>
      <if test="teachertime != null">
        teachertime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="grade != null">
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseSort != null">
        #{courseSort,jdbcType=VARCHAR},
      </if>
      <if test="classHour != null">
        #{classHour,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="free != null">
        #{free,jdbcType=VARCHAR},
      </if>
      <if test="teachertime != null">
        #{teachertime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fosu.lesson.pojo.TCourseExample" resultType="java.lang.Long">
    select count(*) from t_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_course
    <set>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=VARCHAR},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      </if>
      <if test="record.courseName != null">
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.courseSort != null">
        course_sort = #{record.courseSort,jdbcType=VARCHAR},
      </if>
      <if test="record.classHour != null">
        class_hour = #{record.classHour,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.free != null">
        free = #{record.free,jdbcType=VARCHAR},
      </if>
      <if test="record.teachertime != null">
        teachertime = #{record.teachertime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_course
    set grade = #{record.grade,jdbcType=VARCHAR},
      course_id = #{record.courseId,jdbcType=VARCHAR},
      class_id = #{record.classId,jdbcType=VARCHAR},
      teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      course_sort = #{record.courseSort,jdbcType=VARCHAR},
      class_hour = #{record.classHour,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      free = #{record.free,jdbcType=VARCHAR},
      teachertime = #{record.teachertime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>


  <select id="selectOne" parameterType="com.fosu.lesson.pojo.TCourse" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_course
    <where>
      <if test="courseId != null">
        and course_id = #{courseId,jdbcType=VARCHAR}
      </if>
      <if test="classId != null">
        and  class_id = #{classId,jdbcType=VARCHAR}
      </if>
      <if test="teacherId != null">
        and  teacher_id = #{teacherId,jdbcType=VARCHAR}
      </if>
      <if test="courseName != null">
        and  course_name = #{courseName,jdbcType=VARCHAR}
      </if>
      <if test="courseSort != null">
        and  course_sort = #{courseSort,jdbcType=VARCHAR}
      </if>
      <if test="classHour != null">
        and  class_hour = #{classHour,jdbcType=VARCHAR}
      </if>
      <if test="remark != null">
        and  remark = #{remark,jdbcType=VARCHAR}
      </if>
    </where>
  </select>

  <select id="selectByColumnName" resultType="java.lang.String" parameterType="java.lang.String">
       select distinct  ${columnName} from t_course
    </select>

  <select id="findCourseWithTeacherByCondition" resultType="com.fosu.lesson.pojo.CourseWithTeacher" parameterType="com.fosu.lesson.pojo.CourseWithTeacher">
    SELECT t_course.class_id,t_course.remark course_name, t_course.teacher_id, t_teacher.teacher_name
    FROM t_course, t_teacher
    <where>
      <if test="classId != null">
        and class_id = #{classId}
      </if>
      <if test="teacherId != null">
        and t_course.teacher_id = #{teacherId}
      </if>
      <if test="courseName != null">
      and t_course.remark = #{courseName}
     </if>
      <if test="1==1">
        and t_course.teacher_id = t_teacher.teacher_id
      </if>
    </where>
  </select>

  <select id="findTeacherByCourseName" resultType="com.fosu.lesson.pojo.CourseWithTeacher" parameterType="String">
    SELECT tmp.* FROM
    (
    SELECT t_course.remark course_name, t_course.teacher_id, t_teacher.teacher_name FROM t_course, t_teacher
    WHERE class_id = #{classId} AND t_course.teacher_id = t_teacher.teacher_id
    ) tmp
    WHERE course_name=#{courseName}
  </select>


</mapper>