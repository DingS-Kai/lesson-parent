<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fosu.lesson.dao.TScheduleMapper">
  <resultMap id="BaseResultMap" type="com.fosu.lesson.pojo.TSchedule">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="schedule_id" jdbcType="VARCHAR" property="scheduleId" />
    <result column="class_id" jdbcType="VARCHAR" property="classId" />
    <result column="classroom_id" jdbcType="VARCHAR" property="classroomId" />
    <result column="course_id" jdbcType="VARCHAR" property="courseId" />
    <result column="teacher_id" jdbcType="VARCHAR" property="teacherId" />
    <result column="time_id" jdbcType="VARCHAR" property="timeId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="class_name" jdbcType="VARCHAR" property="className" />
    <result column="place" jdbcType="VARCHAR" property="place" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="teacher_name" jdbcType="VARCHAR" property="teacherName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, schedule_id, class_id, classroom_id, course_id, teacher_id, time_id, remark, 
    class_name, place, course_name, teacher_name
  </sql>
  <select id="selectByExample" parameterType="com.fosu.lesson.pojo.TScheduleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.fosu.lesson.pojo.TScheduleExample">
    delete from t_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fosu.lesson.pojo.TSchedule">
    insert into t_schedule (id, schedule_id, class_id, 
      classroom_id, course_id, teacher_id, 
      time_id, remark, class_name, 
      place, course_name, teacher_name
      )
    values (#{id,jdbcType=INTEGER}, #{scheduleId,jdbcType=VARCHAR}, #{classId,jdbcType=VARCHAR}, 
      #{classroomId,jdbcType=VARCHAR}, #{courseId,jdbcType=VARCHAR}, #{teacherId,jdbcType=VARCHAR}, 
      #{timeId,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{className,jdbcType=VARCHAR}, 
      #{place,jdbcType=VARCHAR}, #{courseName,jdbcType=VARCHAR}, #{teacherName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fosu.lesson.pojo.TSchedule">
    insert into t_schedule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="scheduleId != null">
        schedule_id,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="classroomId != null">
        classroom_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="timeId != null">
        time_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="className != null">
        class_name,
      </if>
      <if test="place != null">
        place,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="teacherName != null">
        teacher_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="scheduleId != null">
        #{scheduleId,jdbcType=VARCHAR},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=VARCHAR},
      </if>
      <if test="classroomId != null">
        #{classroomId,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="timeId != null">
        #{timeId,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="className != null">
        #{className,jdbcType=VARCHAR},
      </if>
      <if test="place != null">
        #{place,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="teacherName != null">
        #{teacherName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fosu.lesson.pojo.TScheduleExample" resultType="java.lang.Long">
    select count(*) from t_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_schedule
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.scheduleId != null">
        schedule_id = #{record.scheduleId,jdbcType=VARCHAR},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=VARCHAR},
      </if>
      <if test="record.classroomId != null">
        classroom_id = #{record.classroomId,jdbcType=VARCHAR},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      </if>
      <if test="record.timeId != null">
        time_id = #{record.timeId,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.className != null">
        class_name = #{record.className,jdbcType=VARCHAR},
      </if>
      <if test="record.place != null">
        place = #{record.place,jdbcType=VARCHAR},
      </if>
      <if test="record.courseName != null">
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherName != null">
        teacher_name = #{record.teacherName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_schedule
    set id = #{record.id,jdbcType=INTEGER},
      schedule_id = #{record.scheduleId,jdbcType=VARCHAR},
      class_id = #{record.classId,jdbcType=VARCHAR},
      classroom_id = #{record.classroomId,jdbcType=VARCHAR},
      course_id = #{record.courseId,jdbcType=VARCHAR},
      teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      time_id = #{record.timeId,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      class_name = #{record.className,jdbcType=VARCHAR},
      place = #{record.place,jdbcType=VARCHAR},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      teacher_name = #{record.teacherName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateName">
     UPDATE t_schedule a,t_class b,t_classroom c,t_course d,t_teacher e
     SET a.course_name=d.remark,a.class_name=concat(b.grade,b.class_name),a.place=c.place,a.teacher_name=e.teacher_name
     WHERE a.classroom_id=c.classroom_id AND a.class_id=b.class_id AND a.course_id=d.course_id and a.teacher_id=e.teacher_id
  </update>
  <update id="deleteAll">
    truncate table t_schedule
</update>

  <select id="findDistinctClassId" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT DISTINCT class_id FROM t_schedule where 1=1
    <if test="grade != null and grade !=''">
        and class_name like '${grade}%'
    </if>
  </select>

  <delete id="deleteOneGrade" parameterType="java.lang.String">
    delete from t_schedule where class_name like '${grade}%'
  </delete>
</mapper>